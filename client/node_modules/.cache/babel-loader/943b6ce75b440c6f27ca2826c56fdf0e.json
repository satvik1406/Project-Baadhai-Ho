{"ast":null,"code":"import _objectSpread from\"D:/Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import TextInput from\"./TextInput\";var CardExpiryInput=function CardExpiryInput(props){var newProps=_objectSpread(_objectSpread({},props),{},{placeholder:props.placeholder||\"Expiry\",onKeyDown:function onKeyDown(e){var nonNumericCharsRe=/[^0-9]/g;var containsNonNumerics=nonNumericCharsRe.test(e.key);var isNotTabOrBackspace=e.which!==8&&e.which!==9;var isNotArrowKey=e.which<37||e.which>40;var isNotCutCopyOrSelect=e.metaKey?e.key!==\"c\"&&e.key!==\"v\"&&e.key!==\"a\":true;if(containsNonNumerics){if(isNotTabOrBackspace&&isNotArrowKey&&isNotCutCopyOrSelect){e.preventDefault();}}else{var sanitizedValue=e.target.value.replace(/[^0-9]+/g,\"\");if(sanitizedValue.length===2&&e.key>3){e.preventDefault();}if(sanitizedValue.length===3){var thirdNumber=parseInt(sanitizedValue[2]);if(e.key===\"0\"){if(thirdNumber===0){e.preventDefault();}}else if(e.key>1&&thirdNumber===3){e.preventDefault();}}if(sanitizedValue.length>3){e.preventDefault();}}}});return/*#__PURE__*/React.createElement(TextInput,newProps);};export default CardExpiryInput;","map":{"version":3,"sources":["D:/Project/client/src/components/type/payment/Components/CardExpiryInput.js"],"names":["React","TextInput","CardExpiryInput","props","newProps","placeholder","onKeyDown","e","nonNumericCharsRe","containsNonNumerics","test","key","isNotTabOrBackspace","which","isNotArrowKey","isNotCutCopyOrSelect","metaKey","preventDefault","sanitizedValue","target","value","replace","length","thirdNumber","parseInt"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC/B,GAAMC,CAAAA,QAAQ,gCACTD,KADS,MAEZE,WAAW,CAAEF,KAAK,CAACE,WAAN,EAAqB,QAFtB,CAGZC,SAAS,CAAE,mBAAAC,CAAC,CAAI,CACd,GAAMC,CAAAA,iBAAiB,CAAG,SAA1B,CACA,GAAMC,CAAAA,mBAAmB,CAAGD,iBAAiB,CAACE,IAAlB,CAAuBH,CAAC,CAACI,GAAzB,CAA5B,CACA,GAAMC,CAAAA,mBAAmB,CAAGL,CAAC,CAACM,KAAF,GAAY,CAAZ,EAAiBN,CAAC,CAACM,KAAF,GAAY,CAAzD,CACA,GAAMC,CAAAA,aAAa,CAAGP,CAAC,CAACM,KAAF,CAAU,EAAV,EAAgBN,CAAC,CAACM,KAAF,CAAU,EAAhD,CACA,GAAME,CAAAA,oBAAoB,CAAGR,CAAC,CAACS,OAAF,CACzBT,CAAC,CAACI,GAAF,GAAU,GAAV,EAAiBJ,CAAC,CAACI,GAAF,GAAU,GAA3B,EAAkCJ,CAAC,CAACI,GAAF,GAAU,GADnB,CAEzB,IAFJ,CAIA,GAAIF,mBAAJ,CAAyB,CACvB,GAAIG,mBAAmB,EAAIE,aAAvB,EAAwCC,oBAA5C,CAAkE,CAChER,CAAC,CAACU,cAAF,GACD,CACF,CAJD,IAIO,CACL,GAAMC,CAAAA,cAAc,CAAGX,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,UAAvB,CAAmC,EAAnC,CAAvB,CACA,GAAIH,cAAc,CAACI,MAAf,GAA0B,CAA1B,EAA+Bf,CAAC,CAACI,GAAF,CAAQ,CAA3C,CAA8C,CAC5CJ,CAAC,CAACU,cAAF,GACD,CACD,GAAIC,cAAc,CAACI,MAAf,GAA0B,CAA9B,CAAiC,CAC/B,GAAMC,CAAAA,WAAW,CAAGC,QAAQ,CAACN,cAAc,CAAC,CAAD,CAAf,CAA5B,CACA,GAAIX,CAAC,CAACI,GAAF,GAAU,GAAd,CAAmB,CACjB,GAAIY,WAAW,GAAK,CAApB,CAAuB,CACrBhB,CAAC,CAACU,cAAF,GACD,CACF,CAJD,IAIO,IAAIV,CAAC,CAACI,GAAF,CAAQ,CAAR,EAAaY,WAAW,GAAK,CAAjC,CAAoC,CACzChB,CAAC,CAACU,cAAF,GACD,CACF,CACD,GAAIC,cAAc,CAACI,MAAf,CAAwB,CAA5B,CAA+B,CAC7Bf,CAAC,CAACU,cAAF,GACD,CACF,CACF,CAnCW,EAAd,CAqCA,mBAAO,oBAAC,SAAD,CAAeb,QAAf,CAAP,CACD,CAvCD,CAoDA,cAAeF,CAAAA,eAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextInput from \"./TextInput\";\n\nconst CardExpiryInput = props => {\n  const newProps = {\n    ...props,\n    placeholder: props.placeholder || \"Expiry\",\n    onKeyDown: e => {\n      const nonNumericCharsRe = /[^0-9]/g;\n      const containsNonNumerics = nonNumericCharsRe.test(e.key);\n      const isNotTabOrBackspace = e.which !== 8 && e.which !== 9;\n      const isNotArrowKey = e.which < 37 || e.which > 40;\n      const isNotCutCopyOrSelect = e.metaKey\n        ? e.key !== \"c\" && e.key !== \"v\" && e.key !== \"a\"\n        : true;\n\n      if (containsNonNumerics) {\n        if (isNotTabOrBackspace && isNotArrowKey && isNotCutCopyOrSelect) {\n          e.preventDefault();\n        }\n      } else {\n        const sanitizedValue = e.target.value.replace(/[^0-9]+/g, \"\");\n        if (sanitizedValue.length === 2 && e.key > 3) {\n          e.preventDefault();\n        }\n        if (sanitizedValue.length === 3) {\n          const thirdNumber = parseInt(sanitizedValue[2]);\n          if (e.key === \"0\") {\n            if (thirdNumber === 0) {\n              e.preventDefault();\n            }\n          } else if (e.key > 1 && thirdNumber === 3) {\n            e.preventDefault();\n          }\n        }\n        if (sanitizedValue.length > 3) {\n          e.preventDefault();\n        }\n      }\n    }\n  };\n  return <TextInput {...newProps} />;\n};\n\nCardExpiryInput.propTypes = {\n  placeholder: PropTypes.string,\n  error: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  size: PropTypes.oneOf([\"small\", \"regular\", \"large\"])\n};\n\nexport default CardExpiryInput;\n"]},"metadata":{},"sourceType":"module"}