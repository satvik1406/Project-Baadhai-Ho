{"ast":null,"code":"import _objectSpread from\"D:/Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import TextInput from\"./TextInput\";var CardCVVInput=function CardCVVInput(props){var newProps=_objectSpread(_objectSpread({},props),{},{placeholder:\"CVV\",onKeyDown:function onKeyDown(e){var nonNumericCharsRe=/[^0-9]/g;var containsNonNumerics=nonNumericCharsRe.test(e.key);var isNotTabOrBackspace=e.which!==8&&e.which!==9;var isNotArrowKey=e.which<37||e.which>40;var isNotCutCopyOrSelect=e.metaKey?e.key!==\"c\"&&e.key!==\"v\"&&e.key!==\"a\":true;if(containsNonNumerics){if(isNotTabOrBackspace&&isNotArrowKey&&isNotCutCopyOrSelect){e.preventDefault();}}else{var value=e.target.value;if(value.length>3){e.preventDefault();}}}});return/*#__PURE__*/React.createElement(TextInput,newProps);};export default CardCVVInput;","map":{"version":3,"sources":["D:/Project/client/src/components/type/payment/Components/CardCVVInput.js"],"names":["React","TextInput","CardCVVInput","props","newProps","placeholder","onKeyDown","e","nonNumericCharsRe","containsNonNumerics","test","key","isNotTabOrBackspace","which","isNotArrowKey","isNotCutCopyOrSelect","metaKey","preventDefault","value","target","length"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC5B,GAAMC,CAAAA,QAAQ,gCACTD,KADS,MAEZE,WAAW,CAAE,KAFD,CAGZC,SAAS,CAAE,mBAAAC,CAAC,CAAI,CACd,GAAMC,CAAAA,iBAAiB,CAAG,SAA1B,CACA,GAAMC,CAAAA,mBAAmB,CAAGD,iBAAiB,CAACE,IAAlB,CAAuBH,CAAC,CAACI,GAAzB,CAA5B,CACA,GAAMC,CAAAA,mBAAmB,CAAGL,CAAC,CAACM,KAAF,GAAY,CAAZ,EAAiBN,CAAC,CAACM,KAAF,GAAY,CAAzD,CACA,GAAMC,CAAAA,aAAa,CAAGP,CAAC,CAACM,KAAF,CAAU,EAAV,EAAgBN,CAAC,CAACM,KAAF,CAAU,EAAhD,CACA,GAAME,CAAAA,oBAAoB,CAAGR,CAAC,CAACS,OAAF,CACzBT,CAAC,CAACI,GAAF,GAAU,GAAV,EAAiBJ,CAAC,CAACI,GAAF,GAAU,GAA3B,EAAkCJ,CAAC,CAACI,GAAF,GAAU,GADnB,CAEzB,IAFJ,CAIA,GAAIF,mBAAJ,CAAyB,CACvB,GAAIG,mBAAmB,EAAIE,aAAvB,EAAwCC,oBAA5C,CAAkE,CAChER,CAAC,CAACU,cAAF,GACD,CACF,CAJD,IAIO,CACL,GAAMC,CAAAA,KAAK,CAAGX,CAAC,CAACY,MAAF,CAASD,KAAvB,CACA,GAAIA,KAAK,CAACE,MAAN,CAAe,CAAnB,CAAsB,CACpBb,CAAC,CAACU,cAAF,GACD,CACF,CACF,CAtBW,EAAd,CAwBA,mBAAO,oBAAC,SAAD,CAAeb,QAAf,CAAP,CACD,CA1BD,CAuCA,cAAeF,CAAAA,YAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextInput from \"./TextInput\";\n\nconst CardCVVInput = props => {\n  const newProps = {\n    ...props,\n    placeholder: \"CVV\",\n    onKeyDown: e => {\n      const nonNumericCharsRe = /[^0-9]/g;\n      const containsNonNumerics = nonNumericCharsRe.test(e.key);\n      const isNotTabOrBackspace = e.which !== 8 && e.which !== 9;\n      const isNotArrowKey = e.which < 37 || e.which > 40;\n      const isNotCutCopyOrSelect = e.metaKey\n        ? e.key !== \"c\" && e.key !== \"v\" && e.key !== \"a\"\n        : true;\n\n      if (containsNonNumerics) {\n        if (isNotTabOrBackspace && isNotArrowKey && isNotCutCopyOrSelect) {\n          e.preventDefault();\n        }\n      } else {\n        const value = e.target.value;\n        if (value.length > 3) {\n          e.preventDefault();\n        }\n      }\n    }\n  };\n  return <TextInput {...newProps} />;\n};\n\nCardCVVInput.propTypes = {\n  placeholder: PropTypes.string,\n  error: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  size: PropTypes.oneOf([\"small\", \"regular\", \"large\"])\n};\n\nexport default CardCVVInput;\n"]},"metadata":{},"sourceType":"module"}